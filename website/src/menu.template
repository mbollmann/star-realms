--- name:tag.menu pipeline:ruby --------------------------------------------------------------------

### This is copied verbatim from webgen's main template, except that links to
### pages are replaced by "#" if they have a submenu.  This is currently
### required for the menu to work properly on devices that don't support :hover.

start_tag = "<ul"
start_tag << " class=\"#{context[:config]['tag.menu.css_class']}\"" if context[:config]['tag.menu.css_class']
start_tag << ">"

nested_list = lambda do |nodes, level|
  out = (level == 1 ? start_tag.dup : "<ul>")
  nodes.each do |node, children|
    menu = (children ? nested_list.call(children, level + 1) : '')
    style, link = Webgen::Tag::Menu.menu_item_details(context.dest_node, node, context.content_node.lang, level, !children.nil?, context[:config])
    #### Here is the hack: ############################
    if !children.nil? then
      link = link.sub( %r{href=".*?"}, 'href="#"' )
    end
    ###################################################
    out << "<li #{style}>#{link}"
    out << menu
    out << "</li>"
  end
  out << "</ul>"
  out
end

flat_list = lambda do |nodes, level|
  submenu = ''
  out = (level == 1 ? start_tag.dup : "<ul>")
  nodes.each do |node, children|
    submenu << (children ? flat_list.call(children, level + 1) : '')
    style, link = Webgen::Tag::Menu.menu_item_details(context.dest_node, node, context.content_node.lang, level, !children.nil?, context[:config])
    out << "<li #{style}>#{link}</li>"
  end
  out << "</ul>" << submenu
  out
end

generator = (context[:config]['tag.menu.style'] == 'nested' ? nested_list : flat_list)
context.content = generator.call(context[:nodes], 1)
